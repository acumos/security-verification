<?xml version="1.0" encoding="UTF-8"?>

<!---
  ===============LICENSE_START=======================================================
  Acumos Apache-2.0
  ===================================================================================
  Copyright (C) 2019 Ericsson Software Technology AB. All rights reserved.
  ===================================================================================
  This Acumos software file is distributed by AT&T and Tech Mahindra
  under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  This file is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ===============LICENSE_END=========================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acumos.license-manager</groupId>
	<artifactId>license-manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>license-manager</name>
	<description>Acumos License Manager</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
		<!-- silence warning about parent relative path -->
		<relativePath />
	</parent>



	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.securityverification.SecurityVerificationApplication</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<skipTests>false</skipTests>
		<!-- Not supplied to all jobs; e.g., Javadoc -->
		<docker.pull.registry>nexus3.acumos.org:10001</docker.pull.registry>
		<!-- Supplied by Jenkins -->
		<docker.push.registry>${env.NEXUS3_PUSH_REGISTRY}</docker.push.registry>
		<maven.build.timestamp.format>yyyy.MM.dd_HH.mm</maven.build.timestamp.format>
	  <mockito.version>1.10.19</mockito.version>
	</properties>

	<!-- Some dependencies are specific to Acumos, but this POM defines no repositories 
		section. The Jenkins server specifies Acumos repositories. Developers should 
		ensure their ~/.m2/settings.xml file has the following URLs in both the repositories 
		and pluginRepositories sections or in a profile: https://nexus.acumos.org/content/repositories/snapshots/ 
		https://nexus.acumos.org/content/repositories/releases/ -->

	<dependencies>
		<dependency>
			<groupId>org.acumos.common-dataservice</groupId>
			<artifactId>cmn-data-svc-client</artifactId>
			<version>2.1.2</version>
		</dependency>
			<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- spring sets the <version>3.0</version> -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Add the build number to the jar manifest. Spring-Boot uses a complex 
				packaging process that makes access to the original Manifest.MF very difficult. 
				However, Java provides access to the implementation version for a package, 
				so cram the build number into there. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Number>${project.version}.${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Skip the jar deployment step -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
</project>
