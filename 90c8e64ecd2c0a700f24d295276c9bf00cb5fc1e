{
  "comments": [
    {
      "key": {
        "uuid": "c60ff625_2d00037d",
        "filename": "security-verification-service/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 290
      },
      "writtenOn": "2019-04-23T19:24:30Z",
      "side": 1,
      "message": "Why do we need 777 permissions for entire maven folder? I am confused why you need to give world writable access to this directory. \n\nAlso the jira doesn\u0027t describe the issue just the fix. The logs directory is a volume so not sure why we are not describing it as a volume \n\nI believe /maven/logs is a mounted volume based on docker compose and kubernetes setup in system-integration. Maybe we should be using VOLUME directive in docker vs mkdir",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 45
      },
      "revId": "90c8e64ecd2c0a700f24d295276c9bf00cb5fc1e",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73c960a8_41e516ca",
        "filename": "security-verification-service/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 4
      },
      "writtenOn": "2019-04-23T19:29:28Z",
      "side": 1,
      "message": "Some processes write files in the local directory, not just to the logs subdirectory; that is only possible for a non-root user if the directory is writable.\n\nThe /maven/logs area varies by deployment.  In our azure dev labs, we use the docker-compose volume feature, which is what the docker peeps recommend; the permissions are set inside the container, not by the volume. In contrast, the AIO uses bind mounts to expose a linux filesystem, and that filesystem sets the permissions.",
      "parentUuid": "c60ff625_2d00037d",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 45
      },
      "revId": "90c8e64ecd2c0a700f24d295276c9bf00cb5fc1e",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e726dbb_65dcdbdb",
        "filename": "security-verification-service/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 290
      },
      "writtenOn": "2019-04-23T19:59:21Z",
      "side": 1,
      "message": "Yes that all makes sense.\n I see what you are trying to do based on reading the parent story. When I make this change and run as unprivileged user and run SV I am seeing error. \n\nsv-scanning-service_1        | E: List directory /var/lib/apt/lists/partial is missing. - Acquire (13: Permission denied)",
      "parentUuid": "73c960a8_41e516ca",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 45
      },
      "revId": "90c8e64ecd2c0a700f24d295276c9bf00cb5fc1e",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dc49b8c_b644fedd",
        "filename": "security-verification-service/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 290
      },
      "writtenOn": "2019-04-23T20:05:58Z",
      "side": 1,
      "message": "maybe related to docker compose file having override for CMD docker directive that was installing command line tools such as curl, wget, git. Not sure if base image requires these.",
      "parentUuid": "9e726dbb_65dcdbdb",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 45
      },
      "revId": "90c8e64ecd2c0a700f24d295276c9bf00cb5fc1e",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    }
  ]
}